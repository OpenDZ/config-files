
hmm, not sure i can parse this all but basically i want:
if an uidshift is applied on a dir
and that maps 0x20000-0x2ffff to 0-0xffff then this should mean that when the container invokes "chmod 100 /etc/passwd" then what actually hits the disk is 0x20000+100
and when we stat() /etc/passwd then what is actually on disk is 0x20000+100 but what is passed to the container's processes is 100
and yes, i only care about privileged container managers setting this all up
and yes, i don't care how this is implemented, if in the VFS or in overlayfs
i think the VFS would be cleaner, but I figure would need patching through all file-systems


i simply think that system images should always be to the base 0
and only at execution time be mapped to anything higher
and at execution time, a new, free range would be picked
and that range would be used as long as that container thing is around,
but no longer, and then reused later on, as soon as the container is
stopped
i simply believe that allowing shifted uids to ever hit the storage is
wrong. the storage should only ever store uids/gids to the base 0
and any mappings should happen at runtime
